
/* auto-generated by gen_syscalls.py, don't edit */
#ifndef Z_INCLUDE_SYSCALLS_ZTEST_TEST_H
#define Z_INCLUDE_SYSCALLS_ZTEST_TEST_H


#include <tracing/tracing_syscall.h>

#ifndef _ASMLANGUAGE

#include <syscall_list.h>
#include <syscall.h>

#include <linker/sections.h>


#if __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6)
#pragma GCC diagnostic push
#endif

#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#if !defined(__XCC__)
#pragma GCC diagnostic ignored "-Warray-bounds"
#endif
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern void z_impl_z_test_1cpu_start(void);

__pinned_func
static inline void z_test_1cpu_start(void)
{
#ifdef CONFIG_USERSPACE
	if (z_syscall_trap()) {
		/* coverity[OVERRUN] */
		arch_syscall_invoke0(K_SYSCALL_Z_TEST_1CPU_START);
		return;
	}
#endif
	compiler_barrier();
	z_impl_z_test_1cpu_start();
}

#if (CONFIG_TRACING_SYSCALL == 1)
#ifndef DISABLE_SYSCALL_TRACING

#define z_test_1cpu_start() do { 	sys_port_trace_syscall_enter(K_SYSCALL_Z_TEST_1CPU_START, z_test_1cpu_start); 	z_test_1cpu_start(); 	sys_port_trace_syscall_exit(K_SYSCALL_Z_TEST_1CPU_START, z_test_1cpu_start); } while(false)
#endif
#endif


extern void z_impl_z_test_1cpu_stop(void);

__pinned_func
static inline void z_test_1cpu_stop(void)
{
#ifdef CONFIG_USERSPACE
	if (z_syscall_trap()) {
		/* coverity[OVERRUN] */
		arch_syscall_invoke0(K_SYSCALL_Z_TEST_1CPU_STOP);
		return;
	}
#endif
	compiler_barrier();
	z_impl_z_test_1cpu_stop();
}

#if (CONFIG_TRACING_SYSCALL == 1)
#ifndef DISABLE_SYSCALL_TRACING

#define z_test_1cpu_stop() do { 	sys_port_trace_syscall_enter(K_SYSCALL_Z_TEST_1CPU_STOP, z_test_1cpu_stop); 	z_test_1cpu_stop(); 	sys_port_trace_syscall_exit(K_SYSCALL_Z_TEST_1CPU_STOP, z_test_1cpu_stop); } while(false)
#endif
#endif


#ifdef __cplusplus
}
#endif

#if __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6)
#pragma GCC diagnostic pop
#endif

#endif
#endif /* include guard */
